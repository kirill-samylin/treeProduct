{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { saveImage } from \"../../services/api\";\nconst initialState = {\n  isOpen: false,\n  image: null\n};\nexport const treeAsync = createAsyncThunk(\"tree/saveImage\", async amount => {\n  const response = await saveImage(amount);\n  return response.data;\n});\nexport const popupCropperSlice = createSlice({\n  name: \"popupCropper\",\n  initialState,\n  reducers: {\n    handleClose: state => {\n      state.isOpen = false;\n      state.image = null;\n    },\n    handleOpen: (state, action) => {\n      state.image = action.payload;\n      state.isOpen = true;\n    }\n  }\n});\nexport const {\n  handleClose,\n  handleOpen\n} = popupCropperSlice.actions;\nexport const selectState = state => state.popupCropper.isOpen;\nexport const selectImage = state => state.popupCropper.image;\nexport default popupCropperSlice.reducer;","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/PopupCropper/PopupCropper.slice.js"],"names":["createSlice","createAsyncThunk","saveImage","initialState","isOpen","image","treeAsync","amount","response","data","popupCropperSlice","name","reducers","handleClose","state","handleOpen","action","payload","actions","selectState","popupCropper","selectImage","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA6C,kBAA7C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAGL,gBAAgB,CACvC,gBADuC,EAEvC,MAAOM,MAAP,IAAkB;AAChB,QAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACK,MAAD,CAAhC;AACA,SAAOC,QAAQ,CAACC,IAAhB;AACD,CALsC,CAAlC;AAQP,OAAO,MAAMC,iBAAiB,GAAGV,WAAW,CAAC;AAC3CW,EAAAA,IAAI,EAAE,cADqC;AAE3CR,EAAAA,YAF2C;AAG3CS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAGC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACV,MAAN,GAAe,KAAf;AACAU,MAAAA,KAAK,CAACT,KAAN,GAAc,IAAd;AACD,KAJO;AAKRU,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACT,KAAN,GAAcW,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACV,MAAN,GAAe,IAAf;AACD;AARO;AAHiC,CAAD,CAArC;AAeP,OAAO,MAAM;AAAES,EAAAA,WAAF;AAAeE,EAAAA;AAAf,IAA8BL,iBAAiB,CAACQ,OAAtD;AAEP,OAAO,MAAMC,WAAW,GAAIL,KAAD,IAAWA,KAAK,CAACM,YAAN,CAAmBhB,MAAlD;AACP,OAAO,MAAMiB,WAAW,GAAIP,KAAD,IAAWA,KAAK,CAACM,YAAN,CAAmBf,KAAlD;AAEP,eAAeK,iBAAiB,CAACY,OAAjC","sourcesContent":["import { createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport { saveImage } from \"../../services/api\";\n\nconst initialState = {\n  isOpen: false,\n  image: null,\n};\n\nexport const treeAsync = createAsyncThunk(\n  \"tree/saveImage\",\n  async (amount) => {\n    const response = await saveImage(amount);\n    return response.data;\n  }\n);\n\nexport const popupCropperSlice = createSlice({\n  name: \"popupCropper\",\n  initialState,\n  reducers: {\n    handleClose: (state) => {\n      state.isOpen = false;\n      state.image = null;\n    },\n    handleOpen: (state, action) => {\n      state.image = action.payload;\n      state.isOpen = true;\n    },\n  },\n});\n\nexport const { handleClose, handleOpen } = popupCropperSlice.actions;\n\nexport const selectState = (state) => state.popupCropper.isOpen;\nexport const selectImage = (state) => state.popupCropper.image;\n\nexport default popupCropperSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}