{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Tree } from '../';\nimport { testProductArray } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [tree, setTree] = useState(testProductArray);\n  const [products, setProducts] = useState([]);\n  const transfotm = useMemo(() => productsTree(products), [products]);\n  useEffect(() => {\n    setProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: products && products.length ? /*#__PURE__*/_jsxDEV(Tree, {\n      tree: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 44\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(App, \"xTyMbyPIs2oZNI6gAeLWDBg7EuM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js"],"names":["React","useState","useMemo","useEffect","Tree","testProductArray","App","tree","setTree","products","setProducts","transfotm","productsTree","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,IAAT,QAAqB,KAArB;AACA,SAASC,gBAAT,QAAiC,aAAjC;;;AACA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACI,gBAAD,CAAhC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMU,SAAS,GAAGT,OAAO,CAAC,MAAMU,YAAY,CAACH,QAAD,CAAnB,EAA+B,CAACA,QAAD,CAA/B,CAAzB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,cACKD,QAAQ,IAAIA,QAAQ,CAACI,MAArB,gBAA8B,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEJ;AAAZ;AAAA;AAAA;AAAA;AAAA,YAA9B,GAAyD;AAD9D,mBADJ;AAKH,CAfM;;GAAMH,G;;KAAAA,G","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Tree } from '../'\nimport { testProductArray } from '../../utils';\nexport const App = () => {\n    const [tree, setTree] = useState(testProductArray);\n    const [products, setProducts] = useState([]);\n\n    const transfotm = useMemo(() => productsTree(products), [products])\n\n    useEffect(() => {\n        setProducts()\n    }, [])\n\n    return (\n        <>\n            {products && products.length ? <Tree tree={products} /> : null}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}