{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/job/foodle-api/src/lk/web/js/react/tree/src/components/ImageCropper/ImageCropper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"cropperjs/dist/cropper.css\";\nimport { Form } from \"react-bootstrap\";\nimport { handleOpen, selectImageLoad } from \"./ImageCropper.slice\";\nimport ImageCropperPreview from './ImageCropperPreview/ImageCropperPreview';\nimport ImageCropperPopup from './ImageCropperPopup/ImageCropperPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ImageCropper = ({\n  register,\n  options,\n  ...props\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const imageLoad = useSelector(selectImageLoad);\n\n  const handleCropper = file => {\n    const isImage = /^image\\/\\w+$/.test(file.type);\n    if (!isImage) return;\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      dispatch(handleOpen(reader.result));\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const onClick = e => {\n    if (e && e.target && e.target.value) {\n      e.target.value = null;\n    }\n  };\n\n  const onChange = e => {\n    e.preventDefault();\n    let files;\n\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n\n    if (files.length) {\n      handleCropper(files[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ImageCropperPreview, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.File, {\n        label: \"\\u041A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0430\",\n        ...register(\"image\"),\n        onChange: onChange,\n        onClick: onClick,\n        disabled: imageLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageCropperPopup, { ...options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImageCropper, \"QxR6Y/Xlk5inUzSSMqeHb8hFWuw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ImageCropper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageCropper\");","map":null,"metadata":{},"sourceType":"module"}