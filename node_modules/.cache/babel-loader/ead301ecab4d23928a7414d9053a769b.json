{"ast":null,"code":"import { isDishes } from \".\";\nexport function isPassive(tree) {\n  return tree.map(branch => {\n    if (isDishes(branch)) {\n      branch.isPassive = branch.products.some(item => item.active);\n      branch.products = isPassive(branch.products);\n    }\n\n    return branch;\n  });\n}\n\nfunction isAllActive(products) {\n  return products.some(product => product.active);\n}\n\nfunction isAllCategory(params) {}\n\nexport function getPassive(tree) {\n  for (let branch of tree) {\n    if (branch.category_id) {\n      const allActiveProducts = branch.products.some(product => product.active);\n      const allActiveCategory = branch.children.some(category => category.disabled);\n      branch.isPassive = allActiveProducts && allActiveCategory;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/module/product/isPassive.js"],"names":["isDishes","isPassive","tree","map","branch","products","some","item","active","isAllActive","product","isAllCategory","params","getPassive","category_id","allActiveProducts","allActiveCategory","children","category","disabled"],"mappings":"AAAA,SAASA,QAAT,QAAyB,GAAzB;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,SAAOA,IAAI,CAACC,GAAL,CAAUC,MAAD,IAAY;AAC1B,QAAIJ,QAAQ,CAACI,MAAD,CAAZ,EAAsB;AACpBA,MAAAA,MAAM,CAACH,SAAP,GAAmBG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,MAApC,CAAnB;AACAJ,MAAAA,MAAM,CAACC,QAAP,GAAkBJ,SAAS,CAACG,MAAM,CAACC,QAAR,CAA3B;AACD;;AACD,WAAOD,MAAP;AACD,GANM,CAAP;AAOD;;AAED,SAASK,WAAT,CAAqBJ,QAArB,EAA+B;AAC7B,SAAOA,QAAQ,CAACC,IAAT,CAAeI,OAAD,IAAaA,OAAO,CAACF,MAAnC,CAAP;AACD;;AAED,SAASG,aAAT,CAAuBC,MAAvB,EAA+B,CAE9B;;AAED,OAAO,SAASC,UAAT,CAAoBX,IAApB,EAA0B;AAC/B,OAAK,IAAIE,MAAT,IAAmBF,IAAnB,EAAyB;AACvB,QAAIE,MAAM,CAACU,WAAX,EAAwB;AACtB,YAAMC,iBAAiB,GAAGX,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAsBI,OAAD,IAAaA,OAAO,CAACF,MAA1C,CAA1B;AACA,YAAMQ,iBAAiB,GAAGZ,MAAM,CAACa,QAAP,CAAgBX,IAAhB,CAAsBY,QAAD,IAAcA,QAAQ,CAACC,QAA5C,CAA1B;AACAf,MAAAA,MAAM,CAACH,SAAP,GAAmBc,iBAAiB,IAAIC,iBAAxC;AACD;AACF;AACF","sourcesContent":["import { isDishes } from \".\";\nexport function isPassive(tree) {\n  return tree.map((branch) => {\n    if (isDishes(branch)) {\n      branch.isPassive = branch.products.some((item) => item.active);\n      branch.products = isPassive(branch.products);\n    }\n    return branch;\n  });\n}\n\nfunction isAllActive(products) {\n  return products.some((product) => product.active);\n}\n\nfunction isAllCategory(params) {\n  \n}\n\nexport function getPassive(tree) {\n  for (let branch of tree) {\n    if (branch.category_id) {\n      const allActiveProducts = branch.products.some((product) => product.active);\n      const allActiveCategory = branch.children.some((category) => category.disabled);\n      branch.isPassive = allActiveProducts && allActiveCategory;\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}