{"ast":null,"code":"import { isEqual, isDishes } from '.';\n\nfunction set(item, status, arr) {\n  if (item.hasOwnProperty('product_id')) {\n    arr.push({\n      product_id: item.product_id,\n      active: status\n    });\n  }\n\n  item.disabled = item.disabled;\n}\n\nfunction treeSetStatus(tree = [], status = false, arr) {\n  for (let branch of tree) {\n    set(branch, status, arr);\n\n    if (branch.category) {\n      treeSetStatus(branch.products, status, arr);\n      treeSetStatus(branch.products, status, arr);\n    }\n  }\n}\n\nexport function changeDisabled(item, tree, status, arr = []) {\n  return tree.map(branch => {\n    if (isEqual(item, branch)) {\n      set(branch, status, arr);\n      treeSetStatus(branch.products, status, arr);\n    } else if (isDishes(branch)) {\n      branch.products = changeDisabled(item, branch.products, status, arr);\n    }\n\n    return branch;\n  });\n}","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/module/category/changeDisabled.js"],"names":["isEqual","isDishes","set","item","status","arr","hasOwnProperty","push","product_id","active","disabled","treeSetStatus","tree","branch","category","products","changeDisabled","map"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,GAAlC;;AAEA,SAASC,GAAT,CAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,GAA3B,EAAgC;AAC5B,MAAIF,IAAI,CAACG,cAAL,CAAoB,YAApB,CAAJ,EAAuC;AACnCD,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,MAAAA,UAAU,EAAEL,IAAI,CAACK,UADZ;AAELC,MAAAA,MAAM,EAAEL;AAFH,KAAT;AAIH;;AACDD,EAAAA,IAAI,CAACO,QAAL,GAAgBP,IAAI,CAACO,QAArB;AACH;;AAED,SAASC,aAAT,CAAuBC,IAAI,GAAC,EAA5B,EAAgCR,MAAM,GAAC,KAAvC,EAA8CC,GAA9C,EAAmD;AAC/C,OAAK,IAAIQ,MAAT,IAAmBD,IAAnB,EAAyB;AACrBV,IAAAA,GAAG,CAACW,MAAD,EAAST,MAAT,EAAiBC,GAAjB,CAAH;;AACA,QAAIQ,MAAM,CAACC,QAAX,EAAqB;AACjBH,MAAAA,aAAa,CAACE,MAAM,CAACE,QAAR,EAAkBX,MAAlB,EAA0BC,GAA1B,CAAb;AACAM,MAAAA,aAAa,CAACE,MAAM,CAACE,QAAR,EAAkBX,MAAlB,EAA0BC,GAA1B,CAAb;AACH;AACJ;AACJ;;AAED,OAAO,SAASW,cAAT,CAAwBb,IAAxB,EAA8BS,IAA9B,EAAoCR,MAApC,EAA4CC,GAAG,GAAC,EAAhD,EAAoD;AACvD,SAAOO,IAAI,CAACK,GAAL,CAAUJ,MAAD,IAAY;AACxB,QAAIb,OAAO,CAACG,IAAD,EAAOU,MAAP,CAAX,EAA2B;AACvBX,MAAAA,GAAG,CAACW,MAAD,EAAST,MAAT,EAAiBC,GAAjB,CAAH;AACAM,MAAAA,aAAa,CAACE,MAAM,CAACE,QAAR,EAAkBX,MAAlB,EAA0BC,GAA1B,CAAb;AACH,KAHD,MAGO,IAAIJ,QAAQ,CAACY,MAAD,CAAZ,EAAsB;AACzBA,MAAAA,MAAM,CAACE,QAAP,GAAkBC,cAAc,CAACb,IAAD,EAAOU,MAAM,CAACE,QAAd,EAAwBX,MAAxB,EAAgCC,GAAhC,CAAhC;AACH;;AACD,WAAOQ,MAAP;AACH,GARM,CAAP;AASH","sourcesContent":["import { isEqual, isDishes } from '.';\n\nfunction set(item, status, arr) {\n    if (item.hasOwnProperty('product_id')) {\n        arr.push({\n            product_id: item.product_id,\n            active: status,\n        })\n    }\n    item.disabled = item.disabled;\n}\n\nfunction treeSetStatus(tree=[], status=false, arr) {\n    for (let branch of tree) {\n        set(branch, status, arr);\n        if (branch.category) {\n            treeSetStatus(branch.products, status, arr);\n            treeSetStatus(branch.products, status, arr);\n        }\n    }\n}\n\nexport function changeDisabled(item, tree, status, arr=[]) {\n    return tree.map((branch) => {\n        if (isEqual(item, branch)) {\n            set(branch, status, arr);\n            treeSetStatus(branch.products, status, arr);\n        } else if (isDishes(branch)) {\n            branch.products = changeDisabled(item, branch.products, status, arr);\n        }\n        return branch;\n    });\n}"]},"metadata":{},"sourceType":"module"}