{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isOpen: false\n};\nexport const popupProductSlice = createSlice({\n  name: \"popupProduct\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    handleClose: state => {\n      state.isOpen = false;\n    },\n    open: state => {\n      state.isOpen = true;\n    }\n  }\n});\nexport const {\n  handleClose,\n  handleOpen\n} = popupProductSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n\nexport const selectState = state => state.popupProduct.isOpen;\nexport default popupProductSlice.reducer;","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/PopupProduct/PopupProductSlice.js"],"names":["createSlice","initialState","isOpen","popupProductSlice","name","reducers","handleClose","state","open","handleOpen","actions","selectState","popupProduct","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAIA,OAAO,MAAMC,iBAAiB,GAAGH,WAAW,CAAC;AAC3CI,EAAAA,IAAI,EAAE,cADqC;AAE3CH,EAAAA,YAF2C;AAG3C;AACAI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAGC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACL,MAAN,GAAe,KAAf;AACD,KAHO;AAIRM,IAAAA,IAAI,EAAGD,KAAD,IAAW;AACfA,MAAAA,KAAK,CAACL,MAAN,GAAe,IAAf;AACD;AANO;AAJiC,CAAD,CAArC;AAcP,OAAO,MAAM;AAAEI,EAAAA,WAAF;AAAeG,EAAAA;AAAf,IAA8BN,iBAAiB,CAACO,OAAtD,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIJ,KAAD,IAAWA,KAAK,CAACK,YAAN,CAAmBV,MAAlD;AAGP,eAAeC,iBAAiB,CAACU,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isOpen: false,\n};\n\nexport const popupProductSlice = createSlice({\n  name: \"popupProduct\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    handleClose: (state) => {\n      state.isOpen = false\n    },\n    open: (state) => {\n      state.isOpen = true\n    },\n  },\n});\n\nexport const { handleClose, handleOpen } = popupProductSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectState = (state) => state.popupProduct.isOpen;\n\n\nexport default popupProductSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}