{"ast":null,"code":"import _defineProperty from\"/Users/kirillsamylin/Desktop/table/stop-list/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{createRef,useEffect,memo}from\"react\";import styles from\"./Tree.module.css\";import{Category,Product}from\"../\";import cn from\"classnames\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Tree=/*#__PURE__*/memo(function(_ref){var id=_ref.id,categories=_ref.categories,products=_ref.products,className=_ref.className,expanded=_ref.expanded;var treeElement=/*#__PURE__*/createRef(null);var onEnd=function onEnd(evt){var oldIndex=evt.oldIndex;var index=evt.newIndex;var item=evt.item;var parent=evt.to;var oldParent=evt.from;var id=item.dataset.id;var name=item.dataset.name;var categoryId=parent.dataset.id;var oldCategoryId=oldParent.dataset.id;if(oldIndex===index&&parent===oldParent)return;console.log({\"id предмета\":id,\"id категории куда суем\":categoryId,\"id категории откуда удаляем\":oldCategoryId,\"index - место куда вставляем\":index,\"oldIndex - место откуда вырезаем\":oldIndex,\"тип\":name});};var onMove=function onMove(evt){var parent=evt.to;var item=evt.dragged;var category_id=parent.dataset.id;var name=item.dataset.name;if(category_id===\"root\"&&name===\"product\")return false;return true;};useEffect(function(){window.$(treeElement.current).sortable({fallbackOnBody:false,// selectedClass: styles.selected,\n// multiDrag: true,\ngroup:{name:\"list\"},animation:200,ghostClass:\"ghost\",handle:\".position\",onEnd:onEnd,onMove:onMove});},[treeElement]);return/*#__PURE__*/_jsxs(\"ul\",{ref:treeElement,\"data-id\":id,className:cn(styles.tree,className,\"list-group\",_defineProperty({},styles.open,expanded)),children:[Array.isArray(products)&&products.map(function(product){return/*#__PURE__*/_jsx(Product,{product:product},product.product_id);}),Array.isArray(categories)&&categories.map(function(category){return/*#__PURE__*/_jsx(Category,{product:category},category.category_id);})]});});","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/Tree/Tree.js"],"names":["React","createRef","useEffect","memo","styles","Category","Product","cn","Tree","id","categories","products","className","expanded","treeElement","onEnd","evt","oldIndex","index","newIndex","item","parent","to","oldParent","from","dataset","name","categoryId","oldCategoryId","console","log","onMove","dragged","category_id","window","$","current","sortable","fallbackOnBody","group","animation","ghostClass","handle","tree","open","Array","isArray","map","product","product_id","category"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, memo } from \"react\";\nimport styles from \"./Tree.module.css\";\nimport { Category, Product } from \"../\";\nimport cn from \"classnames\";\n\nexport const Tree = memo(({ id, categories, products, className, expanded }) => {\n  const treeElement = createRef(null);\n\n  const onEnd = (evt) => {\n    const oldIndex = evt.oldIndex;\n    const index = evt.newIndex;\n    const item = evt.item;\n    const parent = evt.to;\n    const oldParent = evt.from;\n    const id = item.dataset.id;\n    const name = item.dataset.name;\n    const categoryId = parent.dataset.id;\n    const oldCategoryId = oldParent.dataset.id;\n\n    if (oldIndex === index && parent === oldParent) return;\n\n    console.log({\n      \"id предмета\": id,\n      \"id категории куда суем\": categoryId,\n      \"id категории откуда удаляем\": oldCategoryId,\n      \"index - место куда вставляем\": index,\n      \"oldIndex - место откуда вырезаем\": oldIndex,\n      \"тип\": name,\n    });\n  };\n\n  const onMove = (evt) => {\n    const parent = evt.to;\n    const item = evt.dragged;\n    const category_id = parent.dataset.id;\n    const name = item.dataset.name;\n    if (category_id === \"root\" && name === \"product\") return false;\n    return true;\n  };\n\n  useEffect(() => {\n    window.$(treeElement.current).sortable({\n      fallbackOnBody: false,\n      // selectedClass: styles.selected,\n      // multiDrag: true,\n      group: {\n        name: \"list\",\n      },\n      animation: 200,\n      ghostClass: \"ghost\",\n      handle: \".position\",\n      onEnd,\n      onMove,\n    });\n  }, [treeElement]);\n\n  return (\n    <ul\n      ref={treeElement}\n      data-id={id}\n      className={cn(styles.tree, className, \"list-group\", {\n        [styles.open]: expanded,\n      })}\n    >\n      {Array.isArray(products) &&\n        products.map((product) => <Product key={product.product_id} product={product} />\n      )}\n      {Array.isArray(categories) &&\n        categories.map((category) => <Category key={category.category_id} product={category} />\n      )}\n    </ul>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}