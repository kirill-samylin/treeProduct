{"ast":null,"code":"import _objectSpread from\"/Users/kirillsamylin/Desktop/table/stop-list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{useDispatch}from\"react-redux\";import\"cropperjs/dist/cropper.css\";import{Form}from\"react-bootstrap\";import*as cropperSlice from\"./ImageCropper.slice\";import ImageCropperPreview from'./ImageCropperPreview/ImageCropperPreview';import ImageCropperPopup from'./ImageCropperPopup/ImageCropperPopup';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ImageCropper=function ImageCropper(_ref){var register=_ref.register;var dispatch=useDispatch();var handleCropper=function handleCropper(file){var isImage=/^image\\/\\w+$/.test(file.type);if(!isImage)return;var reader=new FileReader();reader.onload=function(){dispatch(cropperSlice.handleOpen(reader.result));};reader.readAsDataURL(file);};var onChange=function onChange(e){e.preventDefault();var files;if(e.dataTransfer){files=e.dataTransfer.files;}else if(e.target){files=e.target.files;}if(files.length){handleCropper(files[0]);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ImageCropperPreview,{}),/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsx(Form.File,_objectSpread(_objectSpread({label:\"\\u041A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0430\"},register(\"image\")),{},{onChange:onChange}))}),/*#__PURE__*/_jsx(ImageCropperPopup,{})]});};","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/ImageCropper/ImageCropper.js"],"names":["React","useDispatch","Form","cropperSlice","ImageCropperPreview","ImageCropperPopup","ImageCropper","register","dispatch","handleCropper","file","isImage","test","type","reader","FileReader","onload","handleOpen","result","readAsDataURL","onChange","e","preventDefault","files","dataTransfer","target","length"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAO,4BAAP,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,sBAA9B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,2CAAhC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,uCAA9B,C,6IAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAE5C,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAU,CAC9B,GAAMC,CAAAA,OAAO,CAAG,eAAeC,IAAf,CAAoBF,IAAI,CAACG,IAAzB,CAAhB,CACA,GAAI,CAACF,OAAL,CAAc,OACd,GAAMG,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgB,UAAM,CACpBR,QAAQ,CAACL,YAAY,CAACc,UAAb,CAAwBH,MAAM,CAACI,MAA/B,CAAD,CAAR,CACD,CAFD,CAGAJ,MAAM,CAACK,aAAP,CAAqBT,IAArB,EACD,CARD,CAUA,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GACA,GAAIC,CAAAA,KAAJ,CACA,GAAIF,CAAC,CAACG,YAAN,CAAoB,CAClBD,KAAK,CAAGF,CAAC,CAACG,YAAF,CAAeD,KAAvB,CACD,CAFD,IAEO,IAAIF,CAAC,CAACI,MAAN,CAAc,CACnBF,KAAK,CAAGF,CAAC,CAACI,MAAF,CAASF,KAAjB,CACD,CACD,GAAIA,KAAK,CAACG,MAAV,CAAkB,CAChBjB,aAAa,CAACc,KAAK,CAAC,CAAD,CAAN,CAAb,CACD,CACF,CAXD,CAaA,mBACE,wCACE,KAAC,mBAAD,IADF,cAEE,KAAC,IAAD,CAAM,KAAN,wBACE,KAAC,IAAD,CAAM,IAAN,8BACE,KAAK,CAAC,kDADR,EAEMhB,QAAQ,CAAC,OAAD,CAFd,MAGE,QAAQ,CAAEa,QAHZ,GADF,EAFF,cASE,KAAC,iBAAD,IATF,GADF,CAaD,CAxCM","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"cropperjs/dist/cropper.css\";\nimport { Form } from \"react-bootstrap\";\nimport * as cropperSlice from \"./ImageCropper.slice\";\nimport ImageCropperPreview from './ImageCropperPreview/ImageCropperPreview';\nimport ImageCropperPopup from './ImageCropperPopup/ImageCropperPopup';\n\nexport const ImageCropper = ({ register }) => {\n\n  const dispatch = useDispatch();\n\n  const handleCropper = (file) => {\n    const isImage = /^image\\/\\w+$/.test(file.type);\n    if (!isImage) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      dispatch(cropperSlice.handleOpen(reader.result));\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const onChange = (e) => {\n    e.preventDefault();\n    let files;\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n    if (files.length) {\n      handleCropper(files[0]);\n    }\n  };\n\n  return (\n    <>\n      <ImageCropperPreview />\n      <Form.Group>\n        <Form.File\n          label=\"Картинка\"\n          {...register(\"image\")}\n          onChange={onChange}\n        />\n      </Form.Group>\n      <ImageCropperPopup />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}