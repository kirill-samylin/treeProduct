{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/job/foodle-api/src/lk/web/js/react/tree/src/components/Tree/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useEffect, memo } from \"react\";\nimport styles from \"./Tree.module.css\";\nimport { Category, Product } from \"../\";\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tree = /*#__PURE__*/memo(_c = _s(({\n  id,\n  categories,\n  products,\n  className,\n  expanded\n}) => {\n  _s();\n\n  const treeElement = /*#__PURE__*/createRef(null);\n\n  const onEnd = evt => {\n    const oldIndex = evt.oldIndex;\n    const index = evt.newIndex;\n    const item = evt.item;\n    const parent = evt.to;\n    const oldParent = evt.from;\n    const id = item.dataset.id;\n    const name = item.dataset.name;\n    const categoryId = parent.dataset.id;\n    const oldCategoryId = oldParent.dataset.id;\n    if (oldIndex === index && parent === oldParent) return;\n    console.log({\n      \"id предмета\": id,\n      \"id категории куда суем\": categoryId,\n      \"id категории откуда удаляем\": oldCategoryId,\n      \"index - место куда вставляем\": index,\n      \"oldIndex - место откуда вырезаем\": oldIndex,\n      \"тип\": name\n    });\n  };\n\n  const onMove = evt => {\n    const parent = evt.to;\n    const item = evt.dragged;\n    const category_id = parent.dataset.id;\n    const name = item.dataset.name;\n    if (category_id === \"root\" && name === \"product\") return false;\n    return true;\n  };\n\n  useEffect(() => {\n    window.$(treeElement.current).sortable({\n      fallbackOnBody: false,\n      // selectedClass: styles.selected,\n      // multiDrag: true,\n      group: {\n        name: \"list\"\n      },\n      animation: 200,\n      ghostClass: \"ghost\",\n      handle: \".position\",\n      onEnd,\n      onMove\n    });\n  }, [treeElement]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    ref: treeElement,\n    \"data-id\": id,\n    className: cn(styles.tree, className, \"list-group\", {\n      [styles.open]: expanded\n    }),\n    children: [Array.isArray(products) && products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      product: product\n    }, product.product_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 35\n    }, this)), Array.isArray(categories) && categories.map(category => /*#__PURE__*/_jsxDEV(Category, {\n      product: category\n    }, category.category_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 38\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n_c2 = Tree;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tree$memo\");\n$RefreshReg$(_c2, \"Tree\");","map":null,"metadata":{},"sourceType":"module"}