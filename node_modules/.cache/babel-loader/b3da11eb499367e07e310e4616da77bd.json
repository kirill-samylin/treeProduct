{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isOpen: false,\n  data: {}\n};\nexport const popupCategorySlice = createSlice({\n  name: \"popupCategory\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    handleClose: state => {\n      state.data = {};\n      state.isOpen = false;\n    },\n    handleOpen: (state, action) => {\n      state.data = {\n        parent_id: action.payload.category_id,\n        category_id: action.payload.category_id,\n        parent_item: action.payload\n      };\n      state.isOpen = true;\n    },\n    setData: (state, action) => {\n      state.data = { ...state.data,\n        ...action.payload\n      };\n    }\n  }\n});\nexport const {\n  handleClose,\n  handleOpen,\n  setData\n} = popupCategorySlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n\nexport const selectState = state => state.popupCategory.isOpen;\nexport const selectData = state => state.popupCategory.data;\nexport default popupCategorySlice.reducer;","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/PopupCategory/PopupCategory.slice.js"],"names":["createSlice","initialState","isOpen","data","popupCategorySlice","name","reducers","handleClose","state","handleOpen","action","parent_id","payload","category_id","parent_item","setData","actions","selectState","popupCategory","selectData","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,OAAO,MAAMC,kBAAkB,GAAGJ,WAAW,CAAC;AAC5CK,EAAAA,IAAI,EAAE,eADsC;AAE5CJ,EAAAA,YAF4C;AAG5C;AACAK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAGC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACL,IAAN,GAAa,EAAb;AACAK,MAAAA,KAAK,CAACN,MAAN,GAAe,KAAf;AACD,KAJO;AAKRO,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACL,IAAN,GAAa;AACXQ,QAAAA,SAAS,EAAED,MAAM,CAACE,OAAP,CAAeC,WADf;AAEXA,QAAAA,WAAW,EAAEH,MAAM,CAACE,OAAP,CAAeC,WAFjB;AAGXC,QAAAA,WAAW,EAAEJ,MAAM,CAACE;AAHT,OAAb;AAKAJ,MAAAA,KAAK,CAACN,MAAN,GAAe,IAAf;AACD,KAZO;AAaRa,IAAAA,OAAO,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;AAC1BF,MAAAA,KAAK,CAACL,IAAN,GAAa,EACX,GAAGK,KAAK,CAACL,IADE;AAEX,WAAGO,MAAM,CAACE;AAFC,OAAb;AAID;AAlBO;AAJkC,CAAD,CAAtC;AA0BP,OAAO,MAAM;AAAEL,EAAAA,WAAF;AAAeE,EAAAA,UAAf;AAA2BM,EAAAA;AAA3B,IAAuCX,kBAAkB,CAACY,OAAhE,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIT,KAAD,IAAWA,KAAK,CAACU,aAAN,CAAoBhB,MAAnD;AACP,OAAO,MAAMiB,UAAU,GAAIX,KAAD,IAAWA,KAAK,CAACU,aAAN,CAAoBf,IAAlD;AAEP,eAAeC,kBAAkB,CAACgB,OAAlC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isOpen: false,\n  data: {},\n};\n\nexport const popupCategorySlice = createSlice({\n  name: \"popupCategory\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    handleClose: (state) => {\n      state.data = {};\n      state.isOpen = false\n    },\n    handleOpen: (state, action) => {\n      state.data = {\n        parent_id: action.payload.category_id,\n        category_id: action.payload.category_id,\n        parent_item: action.payload,\n      };\n      state.isOpen = true;\n    },\n    setData: (state, action) => {\n      state.data = {\n        ...state.data,\n        ...action.payload,\n      }\n    },\n  },\n});\n\nexport const { handleClose, handleOpen, setData } = popupCategorySlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectState = (state) => state.popupCategory.isOpen;\nexport const selectData = (state) => state.popupCategory.data;\n\nexport default popupCategorySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}