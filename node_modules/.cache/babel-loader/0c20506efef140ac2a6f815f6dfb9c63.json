{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isOpen: false,\n  image: null\n};\nexport const popupCropperSlice = createSlice({\n  name: \"popupCropper\",\n  initialState,\n  reducers: {\n    handleClose: state => {\n      state.isOpen = false;\n      state.image = null;\n    },\n    handleOpen: (state, action) => {\n      state.image = action.payload;\n      state.isOpen = true;\n    }\n  }\n});\nexport const {\n  handleClose,\n  handleOpen,\n  setData\n} = popupCropperSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n\nexport const selectState = state => state.popupCropper.isOpen;\nexport const selectImage = state => state.popupCropper.image;\nexport default popupCropperSlice.reducer;","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/PopupCropper/PopupCropper.slice.js"],"names":["createSlice","initialState","isOpen","image","popupCropperSlice","name","reducers","handleClose","state","handleOpen","action","payload","setData","actions","selectState","popupCropper","selectImage","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,OAAO,MAAMC,iBAAiB,GAAGJ,WAAW,CAAC;AAC3CK,EAAAA,IAAI,EAAE,cADqC;AAE3CJ,EAAAA,YAF2C;AAG3CK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAGC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACN,MAAN,GAAe,KAAf;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACD,KAJO;AAKRM,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACL,KAAN,GAAcO,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACN,MAAN,GAAe,IAAf;AACD;AARO;AAHiC,CAAD,CAArC;AAeP,OAAO,MAAM;AAAEK,EAAAA,WAAF;AAAeE,EAAAA,UAAf;AAA2BG,EAAAA;AAA3B,IAAuCR,iBAAiB,CAACS,OAA/D,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIN,KAAD,IAAWA,KAAK,CAACO,YAAN,CAAmBb,MAAlD;AACP,OAAO,MAAMc,WAAW,GAAIR,KAAD,IAAWA,KAAK,CAACO,YAAN,CAAmBZ,KAAlD;AAEP,eAAeC,iBAAiB,CAACa,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isOpen: false,\n  image: null,\n};\n\nexport const popupCropperSlice = createSlice({\n  name: \"popupCropper\",\n  initialState,\n  reducers: {\n    handleClose: (state) => {\n      state.isOpen = false;\n      state.image = null;\n    },\n    handleOpen: (state, action) => {\n      state.image = action.payload;\n      state.isOpen = true;\n    },\n  },\n});\n\nexport const { handleClose, handleOpen, setData } = popupCropperSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectState = (state) => state.popupCropper.isOpen;\nexport const selectImage = (state) => state.popupCropper.image;\n\nexport default popupCropperSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}