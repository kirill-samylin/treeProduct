{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Tree } from '../';\nimport { testProductArray, productsTree } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [products, setProducts] = useState([]); //const transfotm = useMemo(() => setProducts(productsTree(products)), [products]);\n\n  useEffect(() => {\n    const items = productsTree(testProductArray);\n    setProducts(testProductArray);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: products && products.length ? /*#__PURE__*/_jsxDEV(Tree, {\n      tree: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 44\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(App, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js"],"names":["React","useState","useMemo","useEffect","Tree","testProductArray","productsTree","App","products","setProducts","items","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,IAAT,QAAqB,KAArB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA8C,aAA9C;;;AACA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC,CADqB,CAErB;;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,KAAK,GAAGJ,YAAY,CAACD,gBAAD,CAA1B;AACAI,IAAAA,WAAW,CAACJ,gBAAD,CAAX;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,cACKG,QAAQ,IAAIA,QAAQ,CAACG,MAArB,gBAA8B,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEH;AAAZ;AAAA;AAAA;AAAA;AAAA,YAA9B,GAAyD;AAD9D,mBADJ;AAKH,CAdM;;GAAMD,G;;KAAAA,G","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Tree } from '../'\nimport { testProductArray, productsTree} from '../../utils';\nexport const App = () => {\n    const [products, setProducts] = useState([]);\n    //const transfotm = useMemo(() => setProducts(productsTree(products)), [products]);\n\n    useEffect(() => {\n        const items = productsTree(testProductArray);\n        setProducts(testProductArray);\n    }, [])\n\n    return (\n        <>\n            {products && products.length ? <Tree tree={products} /> : null}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}