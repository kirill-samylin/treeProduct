{"ast":null,"code":"import _objectSpread from\"/Users/kirillsamylin/Desktop/table/stop-list/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/kirillsamylin/Desktop/table/stop-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";import styles from\"./ImageCropperPopup.module.css\";import{Popup}from\"../..\";import Cropper from\"react-cropper\";import{Button}from\"react-bootstrap\";import*as cropperSlice from\"../ImageCropper.slice\";import{useSelector,useDispatch}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var style={width:750,height:470};var options={aspectRatio:75/47,autoCropArea:1,style:style};var ImageCropperPopup=function ImageCropperPopup(){var cropperRef=useRef(null);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),cropper=_useState2[0],setCropper=_useState2[1];var state=useSelector(cropperSlice.selectState);var image=useSelector(cropperSlice.selectImage);var dispatch=useDispatch();var onClose=function onClose(){dispatch(cropperSlice.handleClose());};var getCropData=function getCropData(){if(typeof cropper!==\"undefined\"){var croppImage=cropper.getCroppedCanvas().toDataURL();var formData=new FormData();var blob=new Blob([croppImage],{type:\"image/png\"});formData.append(\"image\",blob);dispatch(cropperSlice.saveImageAsync(formData));}};return/*#__PURE__*/_jsxs(Popup,{className:styles.popup,classContainer:styles.container,opened:state,children:[/*#__PURE__*/_jsx(Cropper,_objectSpread(_objectSpread({src:image||\"\"},options),{},{ref:cropperRef,onInitialized:function onInitialized(instance){setCropper(instance);}})),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttons,children:[/*#__PURE__*/_jsx(Button,{onClick:getCropData,children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"}),/*#__PURE__*/_jsx(Button,{onClick:onClose,variant:\"secondary\",children:\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"})]})]});};export default ImageCropperPopup;","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/ImageCropper/ImageCropperPopup/ImageCropperPopup.js"],"names":["React","useRef","useState","styles","Popup","Cropper","Button","cropperSlice","useSelector","useDispatch","style","width","height","options","aspectRatio","autoCropArea","ImageCropperPopup","cropperRef","cropper","setCropper","state","selectState","image","selectImage","dispatch","onClose","handleClose","getCropData","croppImage","getCroppedCanvas","toDataURL","formData","FormData","blob","Blob","type","append","saveImageAsync","popup","container","instance","buttons"],"mappings":"6PAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,OAASC,KAAT,KAAsB,OAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,MAAT,KAAuB,iBAAvB,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,uBAA9B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,wFACA,GAAMC,CAAAA,KAAK,CAAG,CACZC,KAAK,CAAE,GADK,CAEZC,MAAM,CAAE,GAFI,CAAd,CAKA,GAAMC,CAAAA,OAAO,CAAG,CACdC,WAAW,CAAE,GAAK,EADJ,CAEdC,YAAY,CAAE,CAFA,CAGdL,KAAK,CAALA,KAHc,CAAhB,CAMA,GAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAMC,CAAAA,UAAU,CAAGhB,MAAM,CAAC,IAAD,CAAzB,CACA,cAAgCC,QAAQ,CAAC,EAAD,CAAxC,wCAAQgB,OAAR,eAAiBC,UAAjB,eAEA,GAAMC,CAAAA,KAAK,CAAGZ,WAAW,CAACD,YAAY,CAACc,WAAd,CAAzB,CACA,GAAMC,CAAAA,KAAK,CAAGd,WAAW,CAACD,YAAY,CAACgB,WAAd,CAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEA,GAAMgB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBD,QAAQ,CAACjB,YAAY,CAACmB,WAAb,EAAD,CAAR,CACD,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAI,MAAOT,CAAAA,OAAP,GAAmB,WAAvB,CAAoC,CAClC,GAAMU,CAAAA,UAAU,CAAGV,OAAO,CAACW,gBAAR,GAA2BC,SAA3B,EAAnB,CACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACA,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAAS,CAACN,UAAD,CAAT,CAAuB,CAAEO,IAAI,CAAE,WAAR,CAAvB,CAAb,CACAJ,QAAQ,CAACK,MAAT,CAAgB,OAAhB,CAAyBH,IAAzB,EACAT,QAAQ,CAACjB,YAAY,CAAC8B,cAAb,CAA4BN,QAA5B,CAAD,CAAR,CACD,CACF,CARD,CAUA,mBACE,MAAC,KAAD,EACE,SAAS,CAAE5B,MAAM,CAACmC,KADpB,CAEE,cAAc,CAAEnC,MAAM,CAACoC,SAFzB,CAGE,MAAM,CAAEnB,KAHV,wBAKE,KAAC,OAAD,8BACE,GAAG,CAAEE,KAAK,EAAI,EADhB,EAEMT,OAFN,MAGE,GAAG,CAAEI,UAHP,CAIE,aAAa,CAAE,uBAACuB,QAAD,CAAc,CAC3BrB,UAAU,CAACqB,QAAD,CAAV,CACD,CANH,GALF,cAaE,aAAK,SAAS,CAAErC,MAAM,CAACsC,OAAvB,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAEd,WAAjB,8DADF,cAEE,KAAC,MAAD,EAAQ,OAAO,CAAEF,OAAjB,CAA0B,OAAO,CAAC,WAAlC,kDAFF,GAbF,GADF,CAsBD,CA5CD,CA8CA,cAAeT,CAAAA,iBAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styles from \"./ImageCropperPopup.module.css\";\nimport { Popup } from \"../..\";\nimport Cropper from \"react-cropper\";\nimport { Button } from \"react-bootstrap\";\nimport * as cropperSlice from \"../ImageCropper.slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst style = {\n  width: 750,\n  height: 470,\n};\n\nconst options = {\n  aspectRatio: 75 / 47,\n  autoCropArea: 1,\n  style,\n};\n\nconst ImageCropperPopup = () => {\n  const cropperRef = useRef(null);\n  const [ cropper, setCropper ] = useState('');\n\n  const state = useSelector(cropperSlice.selectState);\n  const image = useSelector(cropperSlice.selectImage);\n  const dispatch = useDispatch();\n  \n  const onClose = () => {\n    dispatch(cropperSlice.handleClose());\n  };\n\n  const getCropData = () => {\n    if (typeof cropper !== \"undefined\") {\n      const croppImage = cropper.getCroppedCanvas().toDataURL();\n      const formData = new FormData();\n      const blob = new Blob([croppImage], { type: \"image/png\" });\n      formData.append(\"image\", blob);\n      dispatch(cropperSlice.saveImageAsync(formData));\n    }\n  };\n\n  return (\n    <Popup\n      className={styles.popup}\n      classContainer={styles.container}\n      opened={state}\n    >\n      <Cropper\n        src={image || \"\"}\n        {...options}\n        ref={cropperRef}\n        onInitialized={(instance) => {\n          setCropper(instance);\n        }}\n      />\n      <div className={styles.buttons}>\n        <Button onClick={getCropData}>Добавить</Button>\n        <Button onClick={onClose} variant=\"secondary\">\n          Отмена\n        </Button>\n      </div>\n    </Popup>\n  );\n};\n\nexport default ImageCropperPopup;"]},"metadata":{},"sourceType":"module"}