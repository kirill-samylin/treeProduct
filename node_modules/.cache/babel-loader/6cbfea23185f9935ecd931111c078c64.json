{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/table/stop-list/src/components/ImageCropper/ImageCropperPreview/ImageCropperPreview.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./ImageCropperPreview.module.css\";\nimport cn from \"classnames\";\nimport { selectUrl, selectImage, selectLoading, selectImageLoad, handleRemove, handleOpen, onImageLoad, offImageLoad } from \"../ImageCropper.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImageCropperPreview = ({\n  className,\n  classImage,\n  classMenu\n}) => {\n  _s();\n\n  const url = useSelector(selectUrl);\n  const image = useSelector(selectImage);\n  const loading = useSelector(selectLoading);\n  const imageLoad = useSelector(selectImageLoad);\n  const dispatch = useDispatch();\n\n  const onRemove = () => dispatch(handleRemove());\n\n  const onChange = () => {\n    dispatch(handleOpen(image));\n    dispatch(onImageLoad()); // onRemove();\n    // setImageLoad(true);\n  };\n\n  const onLoad = () => {\n    dispatch(offImageLoad());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: url || loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(styles.preview, className),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.spinner, {\n          [styles.hidden]: imageLoad || !loading\n        }),\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          variant: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onLoad: onLoad,\n        className: cn(styles.image, classImage, {\n          [styles.hidden]: imageLoad || loading\n        }),\n        src: url,\n        alt: \"preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.menu, classMenu),\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onChange,\n          size: \"sm\",\n          className: \"mr-2\",\n          disabled: imageLoad,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onRemove,\n          size: \"sm\",\n          className: \"mr-2\",\n          variant: \"danger\",\n          disabled: imageLoad,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(ImageCropperPreview, \"SsNUQB+uldj0MT6ZYgZ85noFzdI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ImageCropperPreview;\nexport default ImageCropperPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageCropperPreview\");","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/ImageCropper/ImageCropperPreview/ImageCropperPreview.js"],"names":["React","Button","Spinner","useSelector","useDispatch","styles","cn","selectUrl","selectImage","selectLoading","selectImageLoad","handleRemove","handleOpen","onImageLoad","offImageLoad","ImageCropperPreview","className","classImage","classMenu","url","image","loading","imageLoad","dispatch","onRemove","onChange","onLoad","preview","spinner","hidden","menu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./ImageCropperPreview.module.css\";\nimport cn from \"classnames\";\nimport {\n  selectUrl,\n  selectImage,\n  selectLoading,\n  selectImageLoad,\n  handleRemove,\n  handleOpen,\n  onImageLoad, \n  offImageLoad\n} from \"../ImageCropper.slice\";\n\nconst ImageCropperPreview = ({ className, classImage, classMenu }) => {\n  const url = useSelector(selectUrl);\n  const image = useSelector(selectImage);\n  const loading = useSelector(selectLoading);\n  const imageLoad = useSelector(selectImageLoad);\n  const dispatch = useDispatch();\n  const onRemove = () => dispatch(handleRemove());\n\n  const onChange = () => {\n    dispatch(handleOpen(image));\n    dispatch(onImageLoad());\n\n    // onRemove();\n    // setImageLoad(true);\n  };\n\n  const onLoad = () => {\n    dispatch(offImageLoad());\n  };\n\n  return (\n    <>\n      {url || loading ? (\n        <div className={cn(styles.preview, className)}>\n          <div\n            className={cn(styles.spinner, {\n              [styles.hidden]: imageLoad || !loading,\n            })}\n          >\n            <Spinner animation=\"border\" variant=\"primary\" />\n          </div>\n          <img\n            onLoad={onLoad}\n            className={cn(styles.image, classImage, {\n              [styles.hidden]: imageLoad || loading,\n            })}\n            src={url}\n            alt=\"preview\"\n          />\n          <div className={cn(styles.menu, classMenu)}>\n            <Button\n              onClick={onChange}\n              size=\"sm\"\n              className=\"mr-2\"\n              disabled={imageLoad}\n            >\n              Изменить\n            </Button>\n            <Button\n              onClick={onRemove}\n              size=\"sm\"\n              className=\"mr-2\"\n              variant=\"danger\"\n              disabled={imageLoad}\n            >\n              Удалить\n            </Button>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\nexport default ImageCropperPreview;\n"]},"metadata":{},"sourceType":"module"}