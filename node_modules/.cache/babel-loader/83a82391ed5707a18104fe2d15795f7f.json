{"ast":null,"code":"function setStatus(item, status, arr) {\n  if (item.hasOwnProperty('product_id')) {\n    arr.push({\n      product_id: item.product_id,\n      active: status\n    });\n  }\n\n  item.active = status;\n}\n\nfunction treeStatusChange(tree = [], status = false, arr) {\n  for (let branch of tree) {\n    setStatus(branch, status, arr);\n\n    if (branch.products && branch.products.length) {\n      treeStatusChange(branch.products, status, arr);\n    }\n  }\n}\n\nexport function statusChange(item, tree, status, arr = []) {\n  return tree.map(branch => {\n    if (branch.parent_id === item.parent_id && branch.category_id === item.category_id && branch.product_id === item.product_id) {\n      setStatus(branch, status, arr);\n      treeStatusChange(branch.products, status, arr);\n    } else if (branch.products && branch.products.length) {\n      branch.products = statusChange(item, branch.products, status, arr);\n    }\n\n    return branch;\n  });\n}","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/utils/statusChange.js"],"names":["setStatus","item","status","arr","hasOwnProperty","push","product_id","active","treeStatusChange","tree","branch","products","length","statusChange","map","parent_id","category_id"],"mappings":"AACA,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,GAAjC,EAAsC;AAClC,MAAIF,IAAI,CAACG,cAAL,CAAoB,YAApB,CAAJ,EAAuC;AACnCD,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,MAAAA,UAAU,EAAEL,IAAI,CAACK,UADZ;AAELC,MAAAA,MAAM,EAAEL;AAFH,KAAT;AAIH;;AACDD,EAAAA,IAAI,CAACM,MAAL,GAAcL,MAAd;AACH;;AAED,SAASM,gBAAT,CAA0BC,IAAI,GAAC,EAA/B,EAAmCP,MAAM,GAAC,KAA1C,EAAiDC,GAAjD,EAAsD;AAClD,OAAK,IAAIO,MAAT,IAAmBD,IAAnB,EAAyB;AACrBT,IAAAA,SAAS,CAACU,MAAD,EAASR,MAAT,EAAiBC,GAAjB,CAAT;;AACA,QAAIO,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,MAAvC,EAA+C;AAC3CJ,MAAAA,gBAAgB,CAACE,MAAM,CAACC,QAAR,EAAkBT,MAAlB,EAA0BC,GAA1B,CAAhB;AACH;AACJ;AACJ;;AAED,OAAO,SAASU,YAAT,CAAsBZ,IAAtB,EAA4BQ,IAA5B,EAAkCP,MAAlC,EAA0CC,GAAG,GAAC,EAA9C,EAAkD;AACrD,SAAOM,IAAI,CAACK,GAAL,CAAUJ,MAAD,IAAY;AACxB,QAAIA,MAAM,CAACK,SAAP,KAAqBd,IAAI,CAACc,SAA1B,IAAuCL,MAAM,CAACM,WAAP,KAAuBf,IAAI,CAACe,WAAnE,IAAkFN,MAAM,CAACJ,UAAP,KAAsBL,IAAI,CAACK,UAAjH,EAA6H;AACzHN,MAAAA,SAAS,CAACU,MAAD,EAASR,MAAT,EAAiBC,GAAjB,CAAT;AACAK,MAAAA,gBAAgB,CAACE,MAAM,CAACC,QAAR,EAAkBT,MAAlB,EAA0BC,GAA1B,CAAhB;AACH,KAHD,MAGO,IAAIO,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,MAAvC,EAA+C;AAClDF,MAAAA,MAAM,CAACC,QAAP,GAAkBE,YAAY,CAACZ,IAAD,EAAOS,MAAM,CAACC,QAAd,EAAwBT,MAAxB,EAAgCC,GAAhC,CAA9B;AACH;;AACD,WAAOO,MAAP;AACH,GARM,CAAP;AASH","sourcesContent":["\nfunction setStatus(item, status, arr) {\n    if (item.hasOwnProperty('product_id')) {\n        arr.push({\n            product_id: item.product_id,\n            active: status,\n        })\n    }\n    item.active = status\n}\n\nfunction treeStatusChange(tree=[], status=false, arr) {\n    for (let branch of tree) {\n        setStatus(branch, status, arr);\n        if (branch.products && branch.products.length) {\n            treeStatusChange(branch.products, status, arr);\n        }\n    }\n}\n\nexport function statusChange(item, tree, status, arr=[]) {\n    return tree.map((branch) => {\n        if (branch.parent_id === item.parent_id && branch.category_id === item.category_id && branch.product_id === item.product_id) {\n            setStatus(branch, status, arr);\n            treeStatusChange(branch.products, status, arr)\n        } else if (branch.products && branch.products.length) {\n            branch.products = statusChange(item, branch.products, status, arr);\n        }\n        return branch;\n    });\n}"]},"metadata":{},"sourceType":"module"}