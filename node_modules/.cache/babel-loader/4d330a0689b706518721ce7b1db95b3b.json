{"ast":null,"code":"import { isDishes } from \".\";\nexport function isPassive(tree) {\n  return tree.map(branch => {\n    if (isDishes(branch)) {\n      branch.isPassive = branch.products.some(item => item.active);\n      branch.products = isPassive(branch.products);\n    }\n\n    return branch;\n  });\n}\n\nfunction isAllActive(products) {\n  return products.some(product => product.active);\n}\n\nfunction isAllCategory(children) {\n  for (let category of children) {\n    const allActiveProducts = isAllActive(category.products);\n\n    if (!allActiveProducts) {\n      return allActiveProducts;\n    }\n  }\n\n  return false;\n}\n\nexport function getPassive(tree) {\n  for (let branch of tree) {\n    if (branch.category_id) {\n      const allActiveProducts = branch.products.some(product => product.active);\n      const allActiveCategory = branch.children.some(category => category.disabled);\n      branch.isPassive = allActiveProducts && allActiveCategory;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/module/product/isPassive.js"],"names":["isDishes","isPassive","tree","map","branch","products","some","item","active","isAllActive","product","isAllCategory","children","category","allActiveProducts","getPassive","category_id","allActiveCategory","disabled"],"mappings":"AAAA,SAASA,QAAT,QAAyB,GAAzB;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,SAAOA,IAAI,CAACC,GAAL,CAAUC,MAAD,IAAY;AAC1B,QAAIJ,QAAQ,CAACI,MAAD,CAAZ,EAAsB;AACpBA,MAAAA,MAAM,CAACH,SAAP,GAAmBG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,MAApC,CAAnB;AACAJ,MAAAA,MAAM,CAACC,QAAP,GAAkBJ,SAAS,CAACG,MAAM,CAACC,QAAR,CAA3B;AACD;;AACD,WAAOD,MAAP;AACD,GANM,CAAP;AAOD;;AAED,SAASK,WAAT,CAAqBJ,QAArB,EAA+B;AAC7B,SAAOA,QAAQ,CAACC,IAAT,CAAeI,OAAD,IAAaA,OAAO,CAACF,MAAnC,CAAP;AACD;;AAED,SAASG,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B,OAAK,IAAIC,QAAT,IAAqBD,QAArB,EAA+B;AAC7B,UAAME,iBAAiB,GAAGL,WAAW,CAACI,QAAQ,CAACR,QAAV,CAArC;;AACA,QAAI,CAACS,iBAAL,EAAwB;AACtB,aAAOA,iBAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,OAAO,SAASC,UAAT,CAAoBb,IAApB,EAA0B;AAC/B,OAAK,IAAIE,MAAT,IAAmBF,IAAnB,EAAyB;AACvB,QAAIE,MAAM,CAACY,WAAX,EAAwB;AACtB,YAAMF,iBAAiB,GAAGV,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAsBI,OAAD,IAAaA,OAAO,CAACF,MAA1C,CAA1B;AACA,YAAMS,iBAAiB,GAAGb,MAAM,CAACQ,QAAP,CAAgBN,IAAhB,CAAsBO,QAAD,IAAcA,QAAQ,CAACK,QAA5C,CAA1B;AACAd,MAAAA,MAAM,CAACH,SAAP,GAAmBa,iBAAiB,IAAIG,iBAAxC;AACD;AACF;AACF","sourcesContent":["import { isDishes } from \".\";\nexport function isPassive(tree) {\n  return tree.map((branch) => {\n    if (isDishes(branch)) {\n      branch.isPassive = branch.products.some((item) => item.active);\n      branch.products = isPassive(branch.products);\n    }\n    return branch;\n  });\n}\n\nfunction isAllActive(products) {\n  return products.some((product) => product.active);\n}\n\nfunction isAllCategory(children) {\n  for (let category of children) {\n    const allActiveProducts = isAllActive(category.products);\n    if (!allActiveProducts) {\n      return allActiveProducts\n    }\n  }\n  return false\n}\n\nexport function getPassive(tree) {\n  for (let branch of tree) {\n    if (branch.category_id) {\n      const allActiveProducts = branch.products.some((product) => product.active);\n      const allActiveCategory = branch.children.some((category) => category.disabled);\n      branch.isPassive = allActiveProducts && allActiveCategory;\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}