{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/table/stop-list/src/components/ImageCropper/ImageCropperPreview/ImageCropperPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./ImageCropperPreview.module.css\";\nimport cn from 'classnames';\nimport { selectUrl, handleRemove } from \"../ImageCropper.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImageCropperPreview = ({\n  className,\n  classImage,\n  classMenu\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const url = useSelector(selectUrl);\n  const dispatch = useDispatch();\n\n  const onRemove = () => dispatch(handleRemove());\n\n  const onLoading = () => {\n    setTimeout(() => {\n      setLoading(true);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: url ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(styles.preview, className),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.spinner, {\n          [styles.hidden]: loading\n        }),\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          variant: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onLoad: onLoading,\n        className: cn(styles.image, classImage, {\n          [styles.hidden]: !loading\n        }),\n        src: url,\n        alt: \"preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(styles.menu, classMenu),\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          className: \"mr-2\",\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onRemove,\n          size: \"sm\",\n          className: \"mr-2\",\n          variant: \"danger\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(ImageCropperPreview, \"K2+uzk15E1CvxJdS61tXoQrCmzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ImageCropperPreview;\nexport default ImageCropperPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageCropperPreview\");","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/ImageCropper/ImageCropperPreview/ImageCropperPreview.js"],"names":["React","useState","Button","Spinner","useSelector","useDispatch","styles","cn","selectUrl","handleRemove","ImageCropperPreview","className","classImage","classMenu","loading","setLoading","url","dispatch","onRemove","onLoading","setTimeout","preview","spinner","hidden","image","menu"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,uBAAxC;;;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAAA;;AACpE,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMe,GAAG,GAAGZ,WAAW,CAACI,SAAD,CAAvB;AACA,QAAMS,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,QAAQ,GAAG,MAAMD,QAAQ,CAACR,YAAY,EAAb,CAA/B;;AACA,QAAMU,SAAS,GAAG,MAAM;AACtBC,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAID,GALD;;AAMA,sBACE;AAAA,cACGC,GAAD,gBACE;AAAK,MAAA,SAAS,EAAET,EAAE,CAACD,MAAM,CAACe,OAAR,EAAiBV,SAAjB,CAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEJ,EAAE,CAACD,MAAM,CAACgB,OAAR,EAAiB;AACjC,WAAChB,MAAM,CAACiB,MAAR,GAAiBT;AADgB,SAAjB,CAAlB;AAAA,+BAGE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,MAAM,EAAEK,SAAb;AAAwB,QAAA,SAAS,EAAEZ,EAAE,CAACD,MAAM,CAACkB,KAAR,EAAeZ,UAAf,EAA2B;AAC9D,WAACN,MAAM,CAACiB,MAAR,GAAiB,CAACT;AAD4C,SAA3B,CAArC;AAEI,QAAA,GAAG,EAAEE,GAFT;AAEc,QAAA,GAAG,EAAC;AAFlB;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAK,QAAA,SAAS,EAAET,EAAE,CAACD,MAAM,CAACmB,IAAR,EAAcZ,SAAd,CAAlB;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,IAAb;AAAkB,UAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEK,QAAjB;AAA2B,UAAA,IAAI,EAAC,IAAhC;AAAqC,UAAA,SAAS,EAAC,MAA/C;AAAsD,UAAA,OAAO,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAeI;AAhBN,mBADF;AAoBD,CA/BD;;GAAMR,mB;UAEQN,W,EACKC,W;;;KAHbK,mB;AAgCN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./ImageCropperPreview.module.css\";\nimport cn from 'classnames';\nimport { selectUrl, handleRemove } from \"../ImageCropper.slice\";\n\nconst ImageCropperPreview = ({ className, classImage, classMenu }) => {\n  const [ loading, setLoading ] = useState(false);\n  const url = useSelector(selectUrl);\n  const dispatch = useDispatch();\n  const onRemove = () => dispatch(handleRemove());\n  const onLoading = () => {\n    setTimeout(() => {\n      setLoading(true);\n    }, 3000);\n   \n  };\n  return (\n    <>\n     {(url) ? \n        <div className={cn(styles.preview, className)} >\n            <div className={cn(styles.spinner, {\n              [styles.hidden]: loading,\n            })}>\n              <Spinner animation=\"border\" variant=\"primary\" />\n            </div>\n            <img onLoad={onLoading} className={cn(styles.image, classImage, {\n              [styles.hidden]: !loading,\n            })} src={url} alt=\"preview\" />\n            <div className={cn(styles.menu, classMenu)}>\n                <Button size=\"sm\" className=\"mr-2\">Изменить</Button>\n                <Button onClick={onRemove} size=\"sm\" className=\"mr-2\" variant=\"danger\">Удалить</Button>\n            </div>\n        </div>\n        : null}\n    </>\n  );\n};\nexport default ImageCropperPreview;\n"]},"metadata":{},"sourceType":"module"}