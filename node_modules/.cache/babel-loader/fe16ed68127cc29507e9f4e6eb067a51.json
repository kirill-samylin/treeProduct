{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Tree } from '../';\nimport { testProductArray, productsTree, flattenProducts, statusChange } from '../../utils';\nimport { dishes } from '../../module';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [list, setList] = useState([]);\n  const tree = useMemo(() => dishes.tree(products, list), [products, list]);\n\n  const handleStatus = product => {\n    //item, tree, status\n    setProducts(dishes.set(product, tree, !product.active));\n  };\n\n  const handleExpand = product => {\n    console.log(product);\n  };\n\n  useEffect(() => {\n    const list = flattenProducts(testProductArray);\n    const products = productsTree(testProductArray, list);\n    setList(list);\n    setProducts(products);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tree && tree.length ? /*#__PURE__*/_jsxDEV(Tree, {\n      tree: products,\n      handleStatus: handleStatus,\n      handleExpand: handleExpand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(App, \"RKBudmNPw6Iq/Tn2BKs3fmGyftc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js"],"names":["React","useState","useMemo","useEffect","Tree","testProductArray","productsTree","flattenProducts","statusChange","dishes","App","products","setProducts","list","setList","tree","handleStatus","product","set","active","handleExpand","console","log","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,IAAT,QAAqB,KAArB;AACA,SACIC,gBADJ,EAEIC,YAFJ,EAGIC,eAHJ,EAIIC,YAJJ,QAKO,aALP;AAMA,SAASC,MAAT,QAAuB,cAAvB;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,IAAI,GAAGb,OAAO,CAAC,MAAMO,MAAM,CAACM,IAAP,CAAYJ,QAAZ,EAAsBE,IAAtB,CAAP,EAAoC,CAAEF,QAAF,EAAYE,IAAZ,CAApC,CAApB;;AAEA,QAAMG,YAAY,GAAIC,OAAD,IAAa;AAC9B;AACAL,IAAAA,WAAW,CAACH,MAAM,CAACS,GAAP,CAAWD,OAAX,EAAoBF,IAApB,EAA0B,CAACE,OAAO,CAACE,MAAnC,CAAD,CAAX;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAIH,OAAD,IAAa;AAC9BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACH,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,IAAI,GAAGN,eAAe,CAACF,gBAAD,CAA5B;AACA,UAAMM,QAAQ,GAAGL,YAAY,CAACD,gBAAD,EAAmBQ,IAAnB,CAA7B;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,cACKI,IAAI,IAAIA,IAAI,CAACQ,MAAb,gBACG,QAAC,IAAD;AACI,MAAA,IAAI,EAAEZ,QADV;AAEI,MAAA,YAAY,EAAEK,YAFlB;AAGI,MAAA,YAAY,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,YADH,GAMG;AAPR,mBADJ;AAYH,CAjCM;;GAAMV,G;;KAAAA,G","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { Tree } from '../'\nimport { \n    testProductArray,\n    productsTree,\n    flattenProducts,\n    statusChange,\n} from '../../utils';\nimport { dishes } from '../../module';\n\nexport const App = () => {\n    const [products, setProducts] = useState([]);\n    const [list, setList] = useState([]);\n    const tree = useMemo(() => dishes.tree(products, list), [ products, list ]);\n\n    const handleStatus = (product) => {\n        //item, tree, status\n        setProducts(dishes.set(product, tree, !product.active));\n    }\n\n    const handleExpand = (product) => {\n        console.log(product)\n    }\n\n    useEffect(() => {\n        const list = flattenProducts(testProductArray);\n        const products = productsTree(testProductArray, list);\n        setList(list);\n        setProducts(products);\n    }, [])\n    \n    return (\n        <>\n            {tree && tree.length ? \n                <Tree \n                    tree={products} \n                    handleStatus={handleStatus}\n                    handleExpand={handleExpand}\n                /> : \n                null\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}