{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/kirillsamylin/Desktop/table/stop-list/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{isEqual,isDishes}from'.';export function set2(item,tree,key,value){return tree.map(function(branch){if(isEqual(branch,item)){branch[key]=value;}else if(isDishes(branch)){branch.products=set(item,branch.products,key,value);}return branch;});}export function set(item,tree,key,value){var _iterator=_createForOfIteratorHelper(tree),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var branch=_step.value;if(isEqual(branch,item)){branch[key]=value;break;}else if(isDishes(branch)){branch.products=set(item,branch.products,key,value);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return tree;}","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/module/product/set.js"],"names":["isEqual","isDishes","set2","item","tree","key","value","map","branch","products","set"],"mappings":"uJAAA,OAASA,OAAT,CAAkBC,QAAlB,KAAkC,GAAlC,CACA,MAAO,SAASC,CAAAA,IAAT,CAAcC,IAAd,CAAoBC,IAApB,CAA0BC,GAA1B,CAA+BC,KAA/B,CAAsC,CACzC,MAAOF,CAAAA,IAAI,CAACG,GAAL,CAAS,SAACC,MAAD,CAAY,CACxB,GAAIR,OAAO,CAACQ,MAAD,CAASL,IAAT,CAAX,CAA2B,CACvBK,MAAM,CAACH,GAAD,CAAN,CAAcC,KAAd,CACH,CAFD,IAEO,IAAIL,QAAQ,CAACO,MAAD,CAAZ,CAAsB,CACzBA,MAAM,CAACC,QAAP,CAAkBC,GAAG,CAACP,IAAD,CAAOK,MAAM,CAACC,QAAd,CAAwBJ,GAAxB,CAA6BC,KAA7B,CAArB,CACH,CACD,MAAOE,CAAAA,MAAP,CACH,CAPM,CAAP,CAQH,CACD,MAAO,SAASE,CAAAA,GAAT,CAAaP,IAAb,CAAmBC,IAAnB,CAAyBC,GAAzB,CAA8BC,KAA9B,CAAqC,0CACrBF,IADqB,YACxC,+CAAyB,IAAhBI,CAAAA,MAAgB,aACrB,GAAIR,OAAO,CAACQ,MAAD,CAASL,IAAT,CAAX,CAA2B,CACvBK,MAAM,CAACH,GAAD,CAAN,CAAcC,KAAd,CACA,MACH,CAHD,IAGO,IAAIL,QAAQ,CAACO,MAAD,CAAZ,CAAsB,CACzBA,MAAM,CAACC,QAAP,CAAkBC,GAAG,CAACP,IAAD,CAAOK,MAAM,CAACC,QAAd,CAAwBJ,GAAxB,CAA6BC,KAA7B,CAArB,CACH,CACJ,CARuC,qDASxC,MAAOF,CAAAA,IAAP,CACH","sourcesContent":["import { isEqual, isDishes } from '.';\nexport function set2(item, tree, key, value) {\n    return tree.map((branch) => {\n        if (isEqual(branch, item)) {\n            branch[key] = value;\n        } else if (isDishes(branch)) {\n            branch.products = set(item, branch.products, key, value);\n        }\n        return branch;\n    });\n}\nexport function set(item, tree, key, value) {\n    for (let branch of tree) {\n        if (isEqual(branch, item)) {\n            branch[key] = value;\n            break;\n        } else if (isDishes(branch)) {\n            branch.products = set(item, branch.products, key, value);\n        }\n    }\n    return tree;\n}"]},"metadata":{},"sourceType":"module"}