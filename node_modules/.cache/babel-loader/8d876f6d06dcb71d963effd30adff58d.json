{"ast":null,"code":"import { isDishes } from \".\";\nexport function isPassive(tree) {\n  return tree.map(branch => {\n    if (isDishes(branch)) {\n      branch.isPassive = branch.products.some(item => item.active);\n      branch.products = isPassive(branch.products);\n    }\n\n    return branch;\n  });\n}\n\nfunction isAllActive(products) {\n  return products.some(product => product.active);\n}\n\nfunction isAllCategory(children) {\n  for (let category of children) {\n    const allActiveProducts = isAllActive(category.products);\n    const allActiveCategory = isAllCategory(category.children);\n    category.isPassive = allActiveProducts && allActiveCategory;\n  }\n\n  return true;\n}\n\nfunction setPassive(list, parent_id) {\n  const item = list.find(item => item.category_id === parent_id);\n  item.isPassive = true;\n\n  if (item.parent_id) {\n    setPassive(list, item.parent_id);\n  }\n}\n\nexport function getPassive(list) {\n  const passiveItems = list.filter(item => item.active === 0);\n  const uniqueItems = passiveItems.reduce((arr, item) => {\n    if (!arr.find(i => i.parent_id === item.parent_id)) {\n      arr.push(item);\n    }\n\n    return arr;\n  }, []);\n\n  for (let item of uniqueItems) {\n    setPassive(list, item.parent_id);\n  }\n\n  return list;\n}","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/utils/product/isPassive.js"],"names":["isDishes","isPassive","tree","map","branch","products","some","item","active","isAllActive","product","isAllCategory","children","category","allActiveProducts","allActiveCategory","setPassive","list","parent_id","find","category_id","getPassive","passiveItems","filter","uniqueItems","reduce","arr","i","push"],"mappings":"AAAA,SAASA,QAAT,QAAyB,GAAzB;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,SAAOA,IAAI,CAACC,GAAL,CAAUC,MAAD,IAAY;AAC1B,QAAIJ,QAAQ,CAACI,MAAD,CAAZ,EAAsB;AACpBA,MAAAA,MAAM,CAACH,SAAP,GAAmBG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,MAApC,CAAnB;AACAJ,MAAAA,MAAM,CAACC,QAAP,GAAkBJ,SAAS,CAACG,MAAM,CAACC,QAAR,CAA3B;AACD;;AACD,WAAOD,MAAP;AACD,GANM,CAAP;AAOD;;AAED,SAASK,WAAT,CAAqBJ,QAArB,EAA+B;AAC7B,SAAOA,QAAQ,CAACC,IAAT,CAAeI,OAAD,IAAaA,OAAO,CAACF,MAAnC,CAAP;AACD;;AAED,SAASG,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B,OAAK,IAAIC,QAAT,IAAqBD,QAArB,EAA+B;AAC7B,UAAME,iBAAiB,GAAGL,WAAW,CAACI,QAAQ,CAACR,QAAV,CAArC;AACA,UAAMU,iBAAiB,GAAGJ,aAAa,CAACE,QAAQ,CAACD,QAAV,CAAvC;AACAC,IAAAA,QAAQ,CAACZ,SAAT,GAAqBa,iBAAiB,IAAIC,iBAA1C;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,SAA1B,EAAqC;AACnC,QAAMX,IAAI,GAAGU,IAAI,CAACE,IAAL,CAAWZ,IAAD,IAAUA,IAAI,CAACa,WAAL,KAAmBF,SAAvC,CAAb;AACAX,EAAAA,IAAI,CAACN,SAAL,GAAiB,IAAjB;;AACA,MAAIM,IAAI,CAACW,SAAT,EAAoB;AAClBF,IAAAA,UAAU,CAACC,IAAD,EAAOV,IAAI,CAACW,SAAZ,CAAV;AACD;AACF;;AAED,OAAO,SAASG,UAAT,CAAoBJ,IAApB,EAA0B;AAC/B,QAAMK,YAAY,GAAGL,IAAI,CAACM,MAAL,CAAahB,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgB,CAAtC,CAArB;AACA,QAAMgB,WAAW,GAAGF,YAAY,CAACG,MAAb,CAAoB,CAACC,GAAD,EAAMnB,IAAN,KAAe;AACrD,QAAI,CAACmB,GAAG,CAACP,IAAJ,CAAUQ,CAAD,IAAOA,CAAC,CAACT,SAAF,KAAgBX,IAAI,CAACW,SAArC,CAAL,EAAsD;AACpDQ,MAAAA,GAAG,CAACE,IAAJ,CAASrB,IAAT;AACD;;AACD,WAAOmB,GAAP;AACD,GALmB,EAKlB,EALkB,CAApB;;AAMA,OAAK,IAAInB,IAAT,IAAiBiB,WAAjB,EAA8B;AAC5BR,IAAAA,UAAU,CAACC,IAAD,EAAOV,IAAI,CAACW,SAAZ,CAAV;AACD;;AACD,SAAOD,IAAP;AACD","sourcesContent":["import { isDishes } from \".\";\nexport function isPassive(tree) {\n  return tree.map((branch) => {\n    if (isDishes(branch)) {\n      branch.isPassive = branch.products.some((item) => item.active);\n      branch.products = isPassive(branch.products);\n    }\n    return branch;\n  });\n}\n\nfunction isAllActive(products) {\n  return products.some((product) => product.active);\n}\n\nfunction isAllCategory(children) {\n  for (let category of children) {\n    const allActiveProducts = isAllActive(category.products);\n    const allActiveCategory = isAllCategory(category.children);\n    category.isPassive = allActiveProducts && allActiveCategory;\n  }\n  return true\n}\n\nfunction setPassive(list, parent_id) {\n  const item = list.find((item) => item.category_id===parent_id);\n  item.isPassive = true;\n  if (item.parent_id) {\n    setPassive(list, item.parent_id);\n  }\n}\n\nexport function getPassive(list) {\n  const passiveItems = list.filter((item) => item.active === 0);\n  const uniqueItems = passiveItems.reduce((arr, item) => {\n    if (!arr.find((i) => i.parent_id === item.parent_id)) {\n      arr.push(item);\n    }\n    return arr;\n  },[]);\n  for (let item of uniqueItems) {\n    setPassive(list, item.parent_id);\n  }\n  return list; \n}"]},"metadata":{},"sourceType":"module"}