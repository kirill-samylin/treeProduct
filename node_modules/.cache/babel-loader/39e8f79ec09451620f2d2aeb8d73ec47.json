{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/table/stop-list/src/components/Popup\\u0421onfirm/Popup\\u0421onfirm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { Popup } from \"..\";\nimport styles from \"./PopupСonfirm.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { selectData, handleClose } from \"./PopupСonfirm.slice\";\nimport { insert } from '../App/App.slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PopupСonfirm = () => {\n  _s();\n\n  const {\n    isOpen,\n    title,\n    data,\n    cb\n  } = useSelector(selectData);\n  const dispatch = useDispatch();\n  const onClose = useCallback(() => dispatch(handleClose()), [dispatch]);\n  const handleConfirm = useCallback(() => {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    onClose();\n  }, [cb]);\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    opened: isOpen,\n    title: title,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleConfirm,\n        children: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onClose,\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupСonfirm, \"PEghOrUVreILjMyNCdGvFsbPPA8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PopupСonfirm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\\u0421onfirm\");","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/PopupСonfirm/PopupСonfirm.js"],"names":["React","useCallback","Popup","styles","useSelector","useDispatch","Button","selectData","handleClose","insert","PopupСonfirm","isOpen","title","data","cb","dispatch","onClose","handleConfirm","buttons"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,IAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,sBAAxC;AAEA,SACEC,MADF,QAEO,kBAFP;;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,MAA8BV,WAAW,CAACG,UAAD,CAA/C;AACA,QAAMQ,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,OAAO,GAAGf,WAAW,CAAC,MAAMc,QAAQ,CAACP,WAAW,EAAZ,CAAf,EAAgC,CAACO,QAAD,CAAhC,CAA3B;AAEA,QAAME,aAAa,GAAGhB,WAAW,CAAC,MAAM;AACtC,QAAI,OAAOa,EAAP,KAAc,UAAlB,EAA8B;AAC5BA,MAAAA,EAAE;AACH;;AACDE,IAAAA,OAAO;AACR,GALgC,EAK9B,CAACF,EAAD,CAL8B,CAAjC;AAOA,sBACE,QAAC,KAAD;AACE,IAAA,MAAM,EAAEH,MADV;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,OAAO,EAAEI,OAHX;AAAA,2BAKI;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACe,OAAvB;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAED,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7BM;;GAAMN,Y;UACyBN,W,EACnBC,W;;;KAFNK,Y","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Popup } from \"..\";\nimport styles from \"./PopupСonfirm.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport { selectData, handleClose } from \"./PopupСonfirm.slice\";\n\nimport {\n  insert,\n} from '../App/App.slice';\n\nexport const PopupСonfirm = () => {\n  const { isOpen, title, data, cb } = useSelector(selectData);\n  const dispatch = useDispatch();\n\n  const onClose = useCallback(() => dispatch(handleClose()), [dispatch]);\n\n  const handleConfirm = useCallback(() => {\n    if (typeof cb === 'function') {\n      cb();\n    }\n    onClose();\n  }, [cb]);\n\n  return (\n    <Popup\n      opened={isOpen}\n      title={title}\n      onClose={onClose}\n    >\n        <div className={styles.buttons}>\n            <Button variant=\"primary\" onClick={handleConfirm}>\n              Да\n            </Button>\n            <Button variant=\"secondary\" onClick={onClose}>\n              Отмена\n            </Button>\n        </div>\n    </Popup>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}