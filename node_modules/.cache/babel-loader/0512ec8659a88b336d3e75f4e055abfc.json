{"ast":null,"code":"import { isEqual, isDishes } from '.';\nexport function set2(item, tree, key, value) {\n  return tree.map(branch => {\n    if (isEqual(branch, item)) {\n      branch[key] = value;\n    } else if (isDishes(branch)) {\n      branch.products = set(item, branch.products, key, value);\n    }\n\n    return branch;\n  });\n}\nexport function set(item, tree, key, value) {\n  for (let branch of tree) {\n    if (isEqual(branch, item)) {\n      branch[key] = value;\n      break;\n    } else if (branch.category_id) {\n      branch.products = set(item, branch.products, key, value);\n      branch.products = set(item, branch.products, key, value);\n    }\n  }\n\n  return tree;\n}","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/module/product/set.js"],"names":["isEqual","isDishes","set2","item","tree","key","value","map","branch","products","set","category_id"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,GAAlC;AACA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsC;AACzC,SAAOF,IAAI,CAACG,GAAL,CAAUC,MAAD,IAAY;AACxB,QAAIR,OAAO,CAACQ,MAAD,EAASL,IAAT,CAAX,EAA2B;AACvBK,MAAAA,MAAM,CAACH,GAAD,CAAN,GAAcC,KAAd;AACH,KAFD,MAEO,IAAIL,QAAQ,CAACO,MAAD,CAAZ,EAAsB;AACzBA,MAAAA,MAAM,CAACC,QAAP,GAAkBC,GAAG,CAACP,IAAD,EAAOK,MAAM,CAACC,QAAd,EAAwBJ,GAAxB,EAA6BC,KAA7B,CAArB;AACH;;AACD,WAAOE,MAAP;AACH,GAPM,CAAP;AAQH;AACD,OAAO,SAASE,GAAT,CAAaP,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqC;AACxC,OAAK,IAAIE,MAAT,IAAmBJ,IAAnB,EAAyB;AACrB,QAAIJ,OAAO,CAACQ,MAAD,EAASL,IAAT,CAAX,EAA2B;AACvBK,MAAAA,MAAM,CAACH,GAAD,CAAN,GAAcC,KAAd;AACA;AACH,KAHD,MAGO,IAAIE,MAAM,CAACG,WAAX,EAAwB;AAC3BH,MAAAA,MAAM,CAACC,QAAP,GAAkBC,GAAG,CAACP,IAAD,EAAOK,MAAM,CAACC,QAAd,EAAwBJ,GAAxB,EAA6BC,KAA7B,CAArB;AACAE,MAAAA,MAAM,CAACC,QAAP,GAAkBC,GAAG,CAACP,IAAD,EAAOK,MAAM,CAACC,QAAd,EAAwBJ,GAAxB,EAA6BC,KAA7B,CAArB;AACH;AACJ;;AACD,SAAOF,IAAP;AACH","sourcesContent":["import { isEqual, isDishes } from '.';\nexport function set2(item, tree, key, value) {\n    return tree.map((branch) => {\n        if (isEqual(branch, item)) {\n            branch[key] = value;\n        } else if (isDishes(branch)) {\n            branch.products = set(item, branch.products, key, value);\n        }\n        return branch;\n    });\n}\nexport function set(item, tree, key, value) {\n    for (let branch of tree) {\n        if (isEqual(branch, item)) {\n            branch[key] = value;\n            break;\n        } else if (branch.category_id) {\n            branch.products = set(item, branch.products, key, value);\n            branch.products = set(item, branch.products, key, value);\n        }\n    }\n    return tree;\n}"]},"metadata":{},"sourceType":"module"}