{"ast":null,"code":"var _jsxFileName = \"/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { Tree } from '../';\nimport { testProductArray } from '../../utils';\nimport { dishes } from '../../module';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst startList = dishes.flatten(testProductArray);\nconst startProducts = dishes.tree(testProductArray, startList);\nexport const App = () => {\n  _s();\n\n  const [products, setProducts] = useState(startProducts);\n  const [list, setList] = useState(startList);\n  const tree = useMemo(() => {\n    return dishes.tree(products, list);\n  }, [products, list]);\n\n  const handleStatus = product => {\n    setProducts(dishes.setStatus(product, products, !product.active));\n  };\n\n  const handleExpand = product => {\n    setProducts(dishes.set(product, products, 'expanded', !product.expanded));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: products && products.length ? /*#__PURE__*/_jsxDEV(Tree, {\n      tree: products,\n      handleStatus: handleStatus,\n      handleExpand: handleExpand,\n      expanded: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(App, \"wnh8XoUGZamxiPxKP7rhZ+ZIqnE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kirillsamylin/Desktop/table/stop-list/src/components/App/App.js"],"names":["React","useState","useMemo","useEffect","useCallback","Tree","testProductArray","dishes","startList","flatten","startProducts","tree","App","products","setProducts","list","setList","handleStatus","product","setStatus","active","handleExpand","set","expanded","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,SAASC,IAAT,QAAqB,KAArB;AACA,SACIC,gBADJ,QAEO,aAFP;AAGA,SAASC,MAAT,QAAuB,cAAvB;;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAP,CAAeH,gBAAf,CAAlB;AACA,MAAMI,aAAa,GAAGH,MAAM,CAACI,IAAP,CAAYL,gBAAZ,EAA8BE,SAA9B,CAAtB;AAEA,OAAO,MAAMI,GAAG,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACS,aAAD,CAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACO,SAAD,CAAhC;AAEA,QAAMG,IAAI,GAAGT,OAAO,CAAC,MAAM;AACvB,WAAOK,MAAM,CAACI,IAAP,CAAYE,QAAZ,EAAsBE,IAAtB,CAAP;AACH,GAFmB,EAEjB,CAAEF,QAAF,EAAYE,IAAZ,CAFiB,CAApB;;AAIA,QAAME,YAAY,GAAIC,OAAD,IAAa;AAC9BJ,IAAAA,WAAW,CAACP,MAAM,CAACY,SAAP,CAAiBD,OAAjB,EAA0BL,QAA1B,EAAoC,CAACK,OAAO,CAACE,MAA7C,CAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,OAAD,IAAa;AAC9BJ,IAAAA,WAAW,CAACP,MAAM,CAACe,GAAP,CAAWJ,OAAX,EAAoBL,QAApB,EAA8B,UAA9B,EAA0C,CAACK,OAAO,CAACK,QAAnD,CAAD,CAAX;AACH,GAFD;;AAIA,sBACI;AAAA,cACKV,QAAQ,IAAIA,QAAQ,CAACW,MAArB,gBACG,QAAC,IAAD;AACI,MAAA,IAAI,EAAEX,QADV;AAEI,MAAA,YAAY,EAAEI,YAFlB;AAGI,MAAA,YAAY,EAAEI,YAHlB;AAII,MAAA,QAAQ,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,YADH,GAOG;AARR,mBADJ;AAaH,CA7BM;;GAAMT,G;;KAAAA,G","sourcesContent":["import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { Tree } from '../'\nimport { \n    testProductArray,\n} from '../../utils';\nimport { dishes } from '../../module';\n\nconst startList = dishes.flatten(testProductArray);\nconst startProducts = dishes.tree(testProductArray, startList);\n\nexport const App = () => {\n    const [products, setProducts] = useState(startProducts);\n    const [list, setList] = useState(startList);\n    \n    const tree = useMemo(() => {\n        return dishes.tree(products, list);\n    }, [ products, list ]);\n    \n    const handleStatus = (product) => {\n        setProducts(dishes.setStatus(product, products, !product.active));\n    };\n\n    const handleExpand = (product) => {\n        setProducts(dishes.set(product, products, 'expanded', !product.expanded));\n    };\n\n    return (\n        <>  \n            {products && products.length ? \n                <Tree \n                    tree={products} \n                    handleStatus={handleStatus}\n                    handleExpand={handleExpand}\n                    expanded={true}\n                /> : \n                null\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}